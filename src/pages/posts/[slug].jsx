import React from "react";
import moment from "moment";
import { getSluglist, graphcms } from "lib/graphcms";
import { gql } from "graphql-request";
import Image from "next/image";
import Head from "next/head";

const QUERY = gql`
  query ($slug: String!) {
    post(where: { slug: $slug }) {
      id
      title
      slug
      coverPhoto {
        url
        height
        width
      }
      content {
        html
      }
      category {
        name
        categoryName
        catColor
        catColorText
      }
      datePublished
      publishedAt
      minRead
      author {
        id
        name
        avatar {
          url
        }
      }
    }
  }
`;

export async function getStaticProps({ params }) {
  const slug = params.slug;
  const data = await graphcms.request(QUERY, { slug });
  const post = data.post;

  return {
    props: {
      post,
    },
    revalidate: 10,
  };
}

export async function getStaticPaths() {
  const { posts } = await getSluglist();
  return {
    paths: posts.map((post) => ({ params: { slug: post.slug } })),
    fallback: "blocking",
  };
}
const PostDetails = ({ post }) => {
  return (
    <div className="container px-5 lg:px-0 lg:mt-20 mt-[40px] font-display">
      <Head>
        <title>BEDROK Blog | Post</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <h1 className="sm:text-5xl md:text-7xl text-[32px] mb-10 md:mb-12 leading-10 md:leading-[90px]">
          {post.title}
        </h1>
        <div className="overflow-hidden">
          <Image
            src={post.coverPhoto.url}
            className="w-auto h-auto md:w-[800px] md:h-[400px] lg:w-[1000px] lg:h-[500px] rounded-[5px] md:rounded-my object-fill"
            alt="ss"
            width={1000}
            height={500}
          />
        </div>
      </div>
      <div className="mx-auto mt-14 flex flex-col lg:w-[600px]">
        <div className="flex justify-between text-neutral-500 border-b-[1px] border-t-[1px] border-neutral-700 py-[10px] text-base">
          <div>Posted {moment(post.publishedAt).format("L")}</div>
          <div>{post.minRead} min read</div>
        </div>
        <div className="flex gap-2 mt-10 mb-4 items-center text-neutral-500">
          <div className="w-8 h-8 rounded-full overflow-hidden">
            <img src={post.author.avatar.url} className="object-fill" alt="" />
          </div>
          <h1>By {post.author.name}</h1>
        </div>
        <div
          className="prose prose-blockquote:text-[32px] max-w-prose:w-full prose-h1:text-[40px] prose-h1:leading-10 prose-p:text-base prose-p:leading-6 prose-h1:font-normal prose-blockquote:italic prose-blockquote:font-display prose-blockquote:font-normal"
          dangerouslySetInnerHTML={{ __html: post.content.html }}
        ></div>
      </div>
    </div>
  );
};

export default PostDetails;
